{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let ShiftEmployeeComponent = class ShiftEmployeeComponent {\n  constructor(svc) {\n    this.svc = svc;\n    this.shiftEmp = [];\n    this.Form = {\n      shiftEmployeeID: '',\n      new: Date('2025-01-01T00:00:00'),\n      salaryHeadName: '',\n      amount: 0,\n      employeeID: ''\n    };\n    this.isEdit = false;\n  }\n  ngOnInit() {\n    this.getAllSalaryEntry();\n  }\n  getAllSalaryEntry() {\n    this.svc.getAll().subscribe(data => {\n      this.salaryEntry = data;\n    });\n  }\n  onSubmit() {\n    if (this.isEdit) {\n      this.svc.update(this.Form.salaryEntryID, this.Form).subscribe(() => {\n        this.getAllSalaryEntry();\n        this.resetForm();\n      });\n    } else {\n      const newItem = {\n        ...this.Form,\n        id: crypto.randomUUID()\n      }; // If you manually generate string id\n      this.svc.create(newItem).subscribe(() => {\n        this.getAllSalaryEntry();\n        this.resetForm();\n      });\n    }\n  }\n  editItem(item) {\n    this.Form = {\n      ...item\n    };\n    this.isEdit = true;\n  }\n  deleteItem(id) {\n    if (confirm('Are you sure to delete?')) {\n      this.svc.delete(id).subscribe(() => this.getAllSalaryEntry());\n    }\n  }\n  resetForm() {\n    this.Form = {\n      salaryEntryID: '',\n      applyDate: '',\n      salaryHeadName: '',\n      amount: 0,\n      employeeID: ''\n    };\n    this.isEdit = false;\n  }\n};\nShiftEmployeeComponent = __decorate([Component({\n  selector: 'app-shift-employee',\n  templateUrl: './shift-employee.component.html',\n  styleUrls: ['./shift-employee.component.css']\n})], ShiftEmployeeComponent);","map":{"version":3,"names":["Component","ShiftEmployeeComponent","constructor","svc","shiftEmp","Form","shiftEmployeeID","new","Date","salaryHeadName","amount","employeeID","isEdit","ngOnInit","getAllSalaryEntry","getAll","subscribe","data","salaryEntry","onSubmit","update","salaryEntryID","resetForm","newItem","id","crypto","randomUUID","create","editItem","item","deleteItem","confirm","delete","applyDate","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Student\\Desktop\\HRIS\\Client\\src\\app\\components\\shift-employee\\shift-employee.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ShiftEmployee } from 'src/app/models/shift-employee';\n\n@Component({\n  selector: 'app-shift-employee',\n  templateUrl: './shift-employee.component.html',\n  styleUrls: ['./shift-employee.component.css']\n})\nexport class ShiftEmployeeComponent implements OnInit{\n\n    shiftEmp:ShiftEmployee[] = [];\n    Form: ShiftEmployee = { shiftEmployeeID: '', new Date('2025-01-01T00:00:00'), salaryHeadName: '',amount:0,\n      employeeID:''\n     };\n    isEdit: boolean = false;\n  \n     constructor(private svc: SalaryEntryService) {}\n  \n    ngOnInit(): void {\n      this.getAllSalaryEntry();\n    }\n  \n      getAllSalaryEntry(): void {\n      this.svc.getAll().subscribe(data => {\n        this.salaryEntry = data;\n      });\n    }\n  \n     onSubmit(): void {\n      if (this.isEdit) {\n        this.svc.update(this.Form.salaryEntryID!, this.Form).subscribe(() => {\n          this.getAllSalaryEntry();\n          this.resetForm();\n        });\n      } else {\n        const newItem = { ...this.Form, id: crypto.randomUUID() }; // If you manually generate string id\n        this.svc.create(newItem).subscribe(() => {\n          this.getAllSalaryEntry();\n          this.resetForm();\n        });\n      }\n    }\n  \n      editItem(item: SalaryEntry): void {\n      this.Form = { ...item };\n      this.isEdit = true;\n    }\n  \n    deleteItem(id: string): void {\n      if (confirm('Are you sure to delete?')) {\n        this.svc.delete(id).subscribe(() => this.getAllSalaryEntry());\n      }\n    }\n  \n    resetForm(): void {\n      this.Form = { salaryEntryID: '', applyDate:'', salaryHeadName: '',amount:0,\n      employeeID:''};\n      this.isEdit = false;\n    }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAQ1C,WAAMC,sBAAsB,GAA5B,MAAMA,sBAAsB;EAQ9BC,YAAoBC,GAAuB;IAAvB,KAAAA,GAAG,GAAHA,GAAG;IANxB,KAAAC,QAAQ,GAAmB,EAAE;IAC7B,KAAAC,IAAI,GAAkB;MAAEC,eAAe,EAAE,EAAE;MAAEC,GAAG,EAACC,IAAI,CAAC,qBAAqB,CAAC;MAAEC,cAAc,EAAE,EAAE;MAACC,MAAM,EAAC,CAAC;MACvGC,UAAU,EAAC;KACX;IACF,KAAAC,MAAM,GAAY,KAAK;EAEwB;EAE/CC,QAAQA,CAAA;IACN,IAAI,CAACC,iBAAiB,EAAE;EAC1B;EAEEA,iBAAiBA,CAAA;IACjB,IAAI,CAACX,GAAG,CAACY,MAAM,EAAE,CAACC,SAAS,CAACC,IAAI,IAAG;MACjC,IAAI,CAACC,WAAW,GAAGD,IAAI;IACzB,CAAC,CAAC;EACJ;EAECE,QAAQA,CAAA;IACP,IAAI,IAAI,CAACP,MAAM,EAAE;MACf,IAAI,CAACT,GAAG,CAACiB,MAAM,CAAC,IAAI,CAACf,IAAI,CAACgB,aAAc,EAAE,IAAI,CAAChB,IAAI,CAAC,CAACW,SAAS,CAAC,MAAK;QAClE,IAAI,CAACF,iBAAiB,EAAE;QACxB,IAAI,CAACQ,SAAS,EAAE;MAClB,CAAC,CAAC;KACH,MAAM;MACL,MAAMC,OAAO,GAAG;QAAE,GAAG,IAAI,CAAClB,IAAI;QAAEmB,EAAE,EAAEC,MAAM,CAACC,UAAU;MAAE,CAAE,CAAC,CAAC;MAC3D,IAAI,CAACvB,GAAG,CAACwB,MAAM,CAACJ,OAAO,CAAC,CAACP,SAAS,CAAC,MAAK;QACtC,IAAI,CAACF,iBAAiB,EAAE;QACxB,IAAI,CAACQ,SAAS,EAAE;MAClB,CAAC,CAAC;;EAEN;EAEEM,QAAQA,CAACC,IAAiB;IAC1B,IAAI,CAACxB,IAAI,GAAG;MAAE,GAAGwB;IAAI,CAAE;IACvB,IAAI,CAACjB,MAAM,GAAG,IAAI;EACpB;EAEAkB,UAAUA,CAACN,EAAU;IACnB,IAAIO,OAAO,CAAC,yBAAyB,CAAC,EAAE;MACtC,IAAI,CAAC5B,GAAG,CAAC6B,MAAM,CAACR,EAAE,CAAC,CAACR,SAAS,CAAC,MAAM,IAAI,CAACF,iBAAiB,EAAE,CAAC;;EAEjE;EAEAQ,SAASA,CAAA;IACP,IAAI,CAACjB,IAAI,GAAG;MAAEgB,aAAa,EAAE,EAAE;MAAEY,SAAS,EAAC,EAAE;MAAExB,cAAc,EAAE,EAAE;MAACC,MAAM,EAAC,CAAC;MAC1EC,UAAU,EAAC;IAAE,CAAC;IACd,IAAI,CAACC,MAAM,GAAG,KAAK;EACrB;CACH;AAnDYX,sBAAsB,GAAAiC,UAAA,EALlClC,SAAS,CAAC;EACTmC,QAAQ,EAAE,oBAAoB;EAC9BC,WAAW,EAAE,iCAAiC;EAC9CC,SAAS,EAAE,CAAC,gCAAgC;CAC7C,CAAC,C,EACWpC,sBAAsB,CAmDlC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}