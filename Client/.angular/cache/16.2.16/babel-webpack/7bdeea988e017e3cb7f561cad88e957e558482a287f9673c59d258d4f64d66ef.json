{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let OvertimeComponent = class OvertimeComponent {\n  constructor(svc) {\n    this.svc = svc;\n    this.overtime = [];\n    this.Form = {\n      overTimeID: '',\n      otDate: '',\n      otStartTime: '',\n      otEndTime: '',\n      employeeID: ''\n    };\n    this.isEdit = false;\n  }\n  ngOnInit() {\n    this.getAll();\n  }\n  getAll() {\n    this.svc.getAll().subscribe(data => {\n      this.overtime = data;\n    });\n  }\n  onSubmit() {\n    if (this.isEdit) {\n      this.svc.update(this.Form.overTimeID, this.Form).subscribe(() => {\n        this.getAll();\n        this.resetForm();\n      });\n    } else {\n      const newItem = {\n        ...this.Form,\n        id: crypto.randomUUID()\n      };\n      this.svc.create(newItem).subscribe(() => {\n        this.getAll();\n        this.resetForm();\n      });\n    }\n  }\n  editItem(item) {\n    this.Form = {\n      ...item\n    };\n    this.isEdit = true;\n  }\n  deleteItem(id) {\n    if (confirm('Are you sure to delete?')) {\n      this.svc.delete(id).subscribe(() => this.getAll());\n    }\n  }\n  resetForm() {\n    this.Form = {\n      overTimeID: '',\n      otDate: '',\n      otStartTime: '',\n      otEndTime: '',\n      employeeID: ''\n    };\n    this.isEdit = false;\n  }\n};\nOvertimeComponent = __decorate([Component({\n  selector: 'app-overtime',\n  templateUrl: './overtime.component.html',\n  styleUrls: ['./overtime.component.css']\n})], OvertimeComponent);","map":{"version":3,"names":["Component","OvertimeComponent","constructor","svc","overtime","Form","overTimeID","otDate","otStartTime","otEndTime","employeeID","isEdit","ngOnInit","getAll","subscribe","data","onSubmit","update","resetForm","newItem","id","crypto","randomUUID","create","editItem","item","deleteItem","confirm","delete","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\HomePC\\Desktop\\HRIS\\HRIS\\Client\\src\\app\\components\\overtime\\overtime.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Overtime } from 'src/app/models/overtime';\nimport { OvertimeService } from 'src/app/services/overtime.service';\n\n@Component({\n  selector: 'app-overtime',\n  templateUrl: './overtime.component.html',\n  styleUrls: ['./overtime.component.css']\n})\nexport class OvertimeComponent implements OnInit{\n  \n   overtime:Overtime[] = [];\n      Form: Overtime = { overTimeID: '', otDate:'', otStartTime: '',otEndTime:'',employeeID: ''};\n      isEdit: boolean = false;\n    \n       constructor(private svc: OvertimeService) {}\n    \n      ngOnInit(): void {\n        this.getAll();\n      }\n    \n        getAll(): void {\n        this.svc.getAll().subscribe(data => {\n          this.overtime = data;\n        });\n      }\n    \n       onSubmit(): void {\n        if (this.isEdit) {\n          this.svc.update(this.Form.overTimeID!, this.Form).subscribe(() => {\n            this.getAll();\n            this.resetForm();\n          });\n        } else {\n          const newItem = { ...this.Form, id: crypto.randomUUID() }; \n          this.svc.create(newItem).subscribe(() => {\n            this.getAll();\n            this.resetForm();\n          });\n        }\n      }\n    \n        editItem(item: Overtime): void {\n        this.Form = { ...item };\n        this.isEdit = true;\n      }\n    \n      deleteItem(id: string): void {\n        if (confirm('Are you sure to delete?')) {\n          this.svc.delete(id).subscribe(() => this.getAll());\n        }\n      }\n    \n      resetForm(): void {\n        this.Form = {overTimeID: '', otDate:'', otStartTime: '',otEndTime:'',employeeID: ''};\n        this.isEdit = false;\n      }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAS1C,WAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAMvBC,YAAoBC,GAAoB;IAApB,KAAAA,GAAG,GAAHA,GAAG;IAJ3B,KAAAC,QAAQ,GAAc,EAAE;IACrB,KAAAC,IAAI,GAAa;MAAEC,UAAU,EAAE,EAAE;MAAEC,MAAM,EAAC,EAAE;MAAEC,WAAW,EAAE,EAAE;MAACC,SAAS,EAAC,EAAE;MAACC,UAAU,EAAE;IAAE,CAAC;IAC1F,KAAAC,MAAM,GAAY,KAAK;EAEqB;EAE5CC,QAAQA,CAAA;IACN,IAAI,CAACC,MAAM,EAAE;EACf;EAEEA,MAAMA,CAAA;IACN,IAAI,CAACV,GAAG,CAACU,MAAM,EAAE,CAACC,SAAS,CAACC,IAAI,IAAG;MACjC,IAAI,CAACX,QAAQ,GAAGW,IAAI;IACtB,CAAC,CAAC;EACJ;EAECC,QAAQA,CAAA;IACP,IAAI,IAAI,CAACL,MAAM,EAAE;MACf,IAAI,CAACR,GAAG,CAACc,MAAM,CAAC,IAAI,CAACZ,IAAI,CAACC,UAAW,EAAE,IAAI,CAACD,IAAI,CAAC,CAACS,SAAS,CAAC,MAAK;QAC/D,IAAI,CAACD,MAAM,EAAE;QACb,IAAI,CAACK,SAAS,EAAE;MAClB,CAAC,CAAC;KACH,MAAM;MACL,MAAMC,OAAO,GAAG;QAAE,GAAG,IAAI,CAACd,IAAI;QAAEe,EAAE,EAAEC,MAAM,CAACC,UAAU;MAAE,CAAE;MACzD,IAAI,CAACnB,GAAG,CAACoB,MAAM,CAACJ,OAAO,CAAC,CAACL,SAAS,CAAC,MAAK;QACtC,IAAI,CAACD,MAAM,EAAE;QACb,IAAI,CAACK,SAAS,EAAE;MAClB,CAAC,CAAC;;EAEN;EAEEM,QAAQA,CAACC,IAAc;IACvB,IAAI,CAACpB,IAAI,GAAG;MAAE,GAAGoB;IAAI,CAAE;IACvB,IAAI,CAACd,MAAM,GAAG,IAAI;EACpB;EAEAe,UAAUA,CAACN,EAAU;IACnB,IAAIO,OAAO,CAAC,yBAAyB,CAAC,EAAE;MACtC,IAAI,CAACxB,GAAG,CAACyB,MAAM,CAACR,EAAE,CAAC,CAACN,SAAS,CAAC,MAAM,IAAI,CAACD,MAAM,EAAE,CAAC;;EAEtD;EAEAK,SAASA,CAAA;IACP,IAAI,CAACb,IAAI,GAAG;MAACC,UAAU,EAAE,EAAE;MAAEC,MAAM,EAAC,EAAE;MAAEC,WAAW,EAAE,EAAE;MAACC,SAAS,EAAC,EAAE;MAACC,UAAU,EAAE;IAAE,CAAC;IACpF,IAAI,CAACC,MAAM,GAAG,KAAK;EACrB;CACL;AAhDYV,iBAAiB,GAAA4B,UAAA,EAL7B7B,SAAS,CAAC;EACT8B,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,C,EACW/B,iBAAiB,CAgD7B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}